 import 'dart:convert';

LoginResponse loginResponseFromJson(String str) => LoginResponse.fromJson(json.decode(str));

String loginResponseToJson(LoginResponse data) => json.encode(data.toJson());

class LoginResponse {
  LoginResponse({
    required this.user,
    required this.displayName,
    required this.id,
    required this.accessToken,
    required this.data,
    required this.firstName,
    required this.lastName,
    required this.emailAddresses,
    required this.phoneNumbers,
    required this.passwordAutoGenerated,
    required this.refreshToken,
    required this.expiresIn,
    required this.expiresAt,
  });

  User user;
  String displayName;
  int id;
  String accessToken;
  List<Data> data;
  String firstName;
  String lastName;
  List<String> emailAddresses;
  List<dynamic> phoneNumbers;
  bool passwordAutoGenerated;
  String refreshToken;
  int expiresIn;
  DateTime expiresAt;

  factory LoginResponse.fromJson(Map<String, dynamic> json) => LoginResponse(
    user: User.fromJson(json["user"]),
    displayName: json["displayName"],
    id: json["id"],
    accessToken: json["accessToken"],
    data: List<Data>.from(json["data"].map((x) => Data.fromJson(x))),
    firstName: json["firstName"],
    lastName: json["lastName"],
    emailAddresses: List<String>.from(json["emailAddresses"].map((x) => x)),
    phoneNumbers: List<dynamic>.from(json["phoneNumbers"].map((x) => x)),
    passwordAutoGenerated: json["passwordAutoGenerated"],
    refreshToken: json["refreshToken"],
    expiresIn: json["expiresIn"],
    expiresAt: DateTime.parse(json["expiresAt"]),
  );

  Map<String, dynamic> toJson() => {
    "user": user.toJson(),
    "displayName": displayName,
    "id": id,
    "accessToken": accessToken,
    "data": List<dynamic>.from(data.map((x) => x.toJson())),
    "firstName": firstName,
    "lastName": lastName,
    "emailAddresses": List<dynamic>.from(emailAddresses.map((x) => x)),
    "phoneNumbers": List<dynamic>.from(phoneNumbers.map((x) => x)),
    "passwordAutoGenerated": passwordAutoGenerated,
    "refreshToken": refreshToken,
    "expiresIn": expiresIn,
    "expiresAt": expiresAt.toIso8601String(),
  };
}

class Data {
  Data({
    required this.key,
    required this.value,
  });

  String key;
  String value;

  factory Data.fromJson(Map<String, dynamic> json) => Data(
    key: json["key"],
    value: json["value"],
  );

  Map<String, dynamic> toJson() => {
    "key": key,
    "value": value,
  };
}

class User {
  User({
    required this.name,
    required this.firstName,
    required this.lastName,
    required this.userId,
    required this.phoneNumber,
    required this.email,
    required this.workspaces,
    required this.greeting,
  });

  String name;
  String firstName;
  String lastName;
  String userId;
  String phoneNumber;
  String email;
  List<Workspace> workspaces;
  String greeting;

  factory User.fromJson(Map<String, dynamic> json) => User(
    name: json["name"],
    firstName: json["firstName"],
    lastName: json["lastName"],
    userId: json["userId"],
    phoneNumber: json["phoneNumber"],
    email: json["email"],
    workspaces: List<Workspace>.from(json["workspaces"].map((x) => Workspace.fromJson(x))),
    greeting: json["greeting"],
  );

  Map<String, dynamic> toJson() => {
    "name": name,
    "firstName": firstName,
    "lastName": lastName,
    "userId": userId,
    "phoneNumber": phoneNumber,
    "email": email,
    "workspaces": List<dynamic>.from(workspaces.map((x) => x.toJson())),
    "greeting": greeting,
  };
}

class Workspace {
  Workspace({
    required this.name,
    required this.workspaceId,
    required this.type,
    required this.contactEmailAddress,
    required this.contactPhoneNumber,
    required this.managementCompanyName,
    required this.registrationPromoCode,
    required this.roles,
    required this.createdBy,
    required this.bankAccount,
  });

  String name;
  String workspaceId;
  String type;
  String contactEmailAddress;
  String contactPhoneNumber;
  String managementCompanyName;
  String? registrationPromoCode;
  List<String> roles;
  String createdBy;
  BankAccount? bankAccount;

  factory Workspace.fromJson(Map<String, dynamic> json) => Workspace(
    name: json["name"],
    workspaceId: json["workspaceId"],
    type: json["type"],
    contactEmailAddress: json["contactEmailAddress"],
    contactPhoneNumber: json["contactPhoneNumber"],
    managementCompanyName: json["managementCompanyName"],
    registrationPromoCode: json["registrationPromoCode"] != null ? json["registrationPromoCode"] : null,
    roles: List<String>.from(json["roles"].map((x) => x)),
    createdBy: json["createdBy"],
    bankAccount: json["bankAccount"] != null ? BankAccount.fromJson(json["bankAccount"]) : null,
  );

  Map<String, dynamic> toJson() => {
    "name": name,
    "workspaceId": workspaceId,
    "type": type,
    "contactEmailAddress": contactEmailAddress,
    "contactPhoneNumber": contactPhoneNumber,
    "managementCompanyName": managementCompanyName,
    "registrationPromoCode": registrationPromoCode,
    "roles": List<dynamic>.from(roles.map((x) => x)),
    "createdBy": createdBy,
    "bankAccount": bankAccount!.toJson(),
  };
}

class BankAccount {
  BankAccount({
    required this.accountNumber,
    required this.accountName,
    required this.bank,
  });

  String accountNumber;
  String accountName;
  Bank bank;

  factory BankAccount.fromJson(Map<String, dynamic> json) => BankAccount(
    accountNumber: json["accountNumber"],
    accountName: json["accountName"],
    bank: Bank.fromJson(json["bank"]),
  );

  Map<String, dynamic> toJson() => {
    "accountNumber": accountNumber,
    "accountName": accountName,
    "bank": bank.toJson(),
  };
}

class Bank {
  Bank({
    required this.id,
    required this.name,
    required this.code,
    required this.shortCode,
  });

  int id;
  String name;
  String code;
  String shortCode;

  factory Bank.fromJson(Map<String, dynamic> json) => Bank(
    id: json["id"],
    name: json["name"],
    code: json["code"],
    shortCode: json["shortCode"],
  );

  Map<String, dynamic> toJson() => {
    "id": id,
    "name": name,
    "code": code,
    "shortCode": shortCode,
  };
}
